/*
    name "locals and globals"
    tags [variables]
    args []
    errors []
*/
public fn main() -> int {
    locals()
    globals()
    return 0
}

fn locals() {
    bool a;         assert(a is false); assert(::typeOf(a) is bool)
    byte b;         assert(b is 0);     assert(::typeOf(b) is byte)
    short c;        assert(c is 0);     assert(::typeOf(c) is short)
    int d = 2;      assert(d is 2);     assert(::typeOf(d) is int)
    long e = 3;     assert(e is 3);     assert(::typeOf(e) is long)
    float f;        assert(f is 0.0);   assert(::typeOf(f) is float)
    double g = 5.0; assert(g is 5.0);   assert(::typeOf(g) is double)

    int* h;         assert(h is null);  assert(::typeOf(h) is int*)

    fn()->void f1;  assert(f1 is null); assert(::typeOf(f1) is fn()->void)
}

fn globals() {

}
