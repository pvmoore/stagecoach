
import console = core:console

public:

alias UnqualInt = int

enum UnqualEnum {   
    A            
    B 
    C 
}

fn unqual_f1() -> int {
    console.println("unqual_f1")
    return 3
}

fn unqual_f2(int a) -> int {
    console.print("unqual_f2 ")
    console.println(a); 
    return 4
}

// Function ptr
fn()->int unqual_v1 = unqual_f1

// Function ptr
fn(int)->int unqual_v2 = unqual_f2

struct UnqualGreen {
    int a
    public int b
    int c
public:
    int d
    private int e
    int f
private:
    int g
}

private:

//-------------------------------------------------------- private symbols:

alias UnqualShort = short

enum UnqualEnum2 {   
    A            
    B 
}

fn unqual_f3() -> int {
    return 5
}

fn()->int unqual_v3 = unqual_f3
